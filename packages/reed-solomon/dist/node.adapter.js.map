{"version":3,"file":"node.adapter.js","sources":["../src/node.adapter.js"],"sourcesContent":["import { isMainThread, parentPort, Worker, workerData } from 'node:worker_threads';\nimport { ReedSolomon } from './index';\nimport { splitPrice } from './utils';\n\nexport class NodeAdapterReedSolomon extends ReedSolomon {\n  async encodeInWorker(p, sourceData) {\n    return new Promise((resolve, reject) => {\n      if (isMainThread) {\n        // RES is `encodeShards` Array\n        const RES = [];\n        const chunkList = splitPrice(sourceData, this.segmentSize);\n        const threads = new Set();\n\n        for (let i = 0; i < chunkList.length; i++) {\n          const worker = new Worker(p, {\n            workerData: {\n              index: i,\n              chunk: chunkList[i],\n            },\n          });\n          threads.add(worker);\n        }\n\n        for (const w of threads) {\n          w.on('error', (err) => {\n            throw err;\n          });\n          w.on('exit', () => {\n            threads.delete(w);\n            // console.log(`Thread exiting, ${threads.size} running...`)\n            if (threads.size === 0) {\n              const sortedRes = this.sortByIndex(RES);\n              resolve(this.getChecksumsByEncodeShards(sortedRes));\n            }\n          });\n\n          w.on('message', (message) => {\n            // console.log('message', message.encodeData.index)\n            RES[message.index] = message;\n          });\n        }\n      } else {\n        const { chunk, index } = workerData;\n\n        const encodeShard = this.getEncodeShard(chunk, index);\n        parentPort.postMessage(encodeShard);\n      }\n    });\n  }\n}\n"],"names":["ReedSolomon","isMainThread","splitPrice","Worker","workerData","parentPort"],"mappings":";;;;;;;;;;AAIO,MAAM,sBAAsB,SAASA,iBAAW,CAAC;AACxD,EAAE,MAAM,cAAc,CAAC,CAAC,EAAE,UAAU,EAAE;AACtC,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5C,MAAM,IAAIC,gCAAY,EAAE;AACxB;AACA,QAAQ,MAAM,GAAG,GAAG,EAAE,CAAC;AACvB,QAAQ,MAAM,SAAS,GAAGC,gBAAU,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACnE,QAAQ,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AAClC;AACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnD,UAAU,MAAM,MAAM,GAAG,IAAIC,0BAAM,CAAC,CAAC,EAAE;AACvC,YAAY,UAAU,EAAE;AACxB,cAAc,KAAK,EAAE,CAAC;AACtB,cAAc,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;AACjC,aAAa;AACb,WAAW,CAAC,CAAC;AACb,UAAU,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC9B,SAAS;AACT;AACA,QAAQ,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;AACjC,UAAU,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK;AACjC,YAAY,MAAM,GAAG,CAAC;AACtB,WAAW,CAAC,CAAC;AACb,UAAU,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM;AAC7B,YAAY,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9B;AACA,YAAY,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,EAAE;AACpC,cAAc,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACtD,cAAc,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC;AAClE,aAAa;AACb,WAAW,CAAC,CAAC;AACb;AACA,UAAU,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,OAAO,KAAK;AACvC;AACA,YAAY,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;AACzC,WAAW,CAAC,CAAC;AACb,SAAS;AACT,OAAO,MAAM;AACb,QAAQ,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAGC,8BAAU,CAAC;AAC5C;AACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9D,QAAQC,8BAAU,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;AAC5C,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG;AACH;;;;"}